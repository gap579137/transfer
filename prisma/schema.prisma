// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model TransferSession {
  id           String    @id @default(cuid())
  name         String?   // Optional session name
  startTime    DateTime? // Static start time that doesn't change
  lastUpdated  DateTime?
  createdAt    DateTime  @default(now())
  updatedAt    DateTime  @updatedAt
  
  // Relationships
  snapshots       Snapshot[]
  snapshotHistory SnapshotHistory[]
  jobs            Job[]
  
  @@map("transfer_sessions")
}

model Snapshot {
  id        String   @id @default(cuid())
  sessionId String
  name      String   // "A" or "B" or custom name
  total     Float    // Total space in TB
  free      Float    // Free space in TB  
  used      Float    // Used space in TB
  createdAt DateTime @default(now())
  updatedAt DateTime @default(now()) @updatedAt
  
  // Relationships
  session   TransferSession @relation(fields: [sessionId], references: [id], onDelete: Cascade)
  
  @@map("snapshots")
}

// Track all snapshot updates for transfer speed calculation
model SnapshotHistory {
  id          String   @id @default(cuid())
  sessionId   String
  snapshotName String  // "A" or "B"
  total       Float    // Total space in TB
  free        Float    // Free space in TB
  used        Float    // Used space in TB
  createdAt   DateTime @default(now())
  
  // Relationships  
  session     TransferSession @relation(fields: [sessionId], references: [id], onDelete: Cascade)
  
  @@map("snapshot_history")
}

model Job {
  id        String   @id @default(cuid())
  sessionId String
  name      String
  startTime String?  // Time as string (e.g., "17:55")
  createdAt DateTime @default(now())
  
  // Relationships
  session   TransferSession @relation(fields: [sessionId], references: [id], onDelete: Cascade)
  
  @@map("jobs")
}
